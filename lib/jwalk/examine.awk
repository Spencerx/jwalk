# jwalk: a streaming JSON parser for Unix
# (c) Sam Stephenson / https://jwalk.sh

# jwalk/examine.awk provides an awk runtime environment for working with the
# output generated by jwalk/parse.awk. For each line of parser input,
# jwalk/examine.awk sets the following awk variables:
#
#     keys    an array of zero or more strings, representing the key path,
#             indexed forward starting at 1 and backward at -1
#     path    the key path as a string, with each key separated by a tab (FS)
#     key     the rightmost (i.e., last) key of the key path
#     type    the type of the value: one of "number", "string", "boolean",
#             "null", "array", or "object"
#     leaf    0/false when type is "array" or "object"; 1/true otherwise
#     value   (aliased as _) the string representation of the JSON value
#
# The special characters newline, tab, and backslash remain escaped in these
# variables' values, as they are in jwalk/parse.awk output. The unescape()
# function will replace escaped characters with their corresponding values.

BEGIN {
  FS = OFS = "\t"
}

{
  examine()
}

function examine(i, v) {
  depth = NF - 2
  split("", keys)
  path = ""
  for (i = 1; i <= depth; i++) {
    keys[sprintf("%d", i)] = keys[sprintf("%d", -(depth - i + 1))] = v = $(i)
    path = (length(path) ? path FS : path) v
  }

  key = $(NF - 2)
  type = $(NF - 1)
  value = _ = $(NF)
  leaf = type != "array" && type != "object"
}

function unescape(str) {
  str = str == 0 && length(str) == 0 ? value : str
  gsub(/\\n/, "\n", str)
  gsub(/\\t/, "\t", str)
  gsub(/\\\\/, "\\", str)
  return str
}
